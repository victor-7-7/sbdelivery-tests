apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.ibotta.gradle.aop'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "ru.skillbranch.sbdelivery"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        // https://github.com/Ibotta/gradle-aspectj-pipeline-plugin#how-do-i-use-this-plugin
        freeCompilerArgs = ["-Xsam-conversions=class"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        // https://developer.android.com/codelabs/jetpack-compose-basics#1
        // Also, make sure that kotlinCompilerVersion is not present in the composeOptions block
//        kotlinCompilerVersion = "1.5.10"
        kotlinCompilerExtensionVersion "1.0.0-rc02"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
// https://kotlinlang.org/docs/whatsnew14.html#dependency-on-the-standard-library-added-by-default
    // You no longer need to declare a dependency on the stdlib library in
    // any Kotlin Gradle project, including a multiplatform one.
    // The dependency is added by default
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Jetpack
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$vm_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$vm_version"
    implementation "com.google.android.material:material:$material_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutines_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_version}"

    //Room
    implementation "androidx.room:room-runtime:${room_version}"
    implementation "androidx.room:room-ktx:${room_version}"
    kapt "androidx.room:room-compiler:${room_version}"

    //Networking
    implementation "com.squareup.retrofit2:retrofit:$retofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    //di
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_vm_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler_version"

    // image loader
    // https://github.com/google/accompanist/releases
    // Accompanist Coil is deprecated
//    implementation "dev.chrisbanes.accompanist:accompanist-coil:$coil_accompanist_compose_version"
    implementation "io.coil-kt:coil-compose:$coil_compose_version"

    //compose
    implementation "androidx.compose.compiler:compiler:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with activities
    implementation "androidx.activity:activity-compose:$compose_activity_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constarint_version"

    // AspectJ
    // https://jdvp.me/articles/Switching-AspectJ-Plugins-Android
    // https://github.com/Ibotta/gradle-aspectj-pipeline-plugin
    implementation "org.aspectj:aspectjrt:1.9.6"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1'
    testImplementation "io.mockk:mockk:1.11.0"

    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"
}

// https://github.com/Ibotta/gradle-aspectj-pipeline-plugin
aopWeave {
    filter = "ru/skillbranch/sbdelivery"
}

// https://dagger.dev/hilt/gradle-setup.html
kapt {
    correctErrorTypes true
}